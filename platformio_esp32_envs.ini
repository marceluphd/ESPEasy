;;; ESP32 test build ********************************************************************;
; Status of the ESP32 support is still considered "beta"                                 ;
; Most plugins work just fine on ESP32.                                                  ;
; Especially some plugins using serial may not run very well  (GPS does run fine).       ;
; ***************************************************************************************;



[esp32_common]
extends                   = common
platform                  = ${core_esp32_1_11_0.platform}
lib_ignore                = AS_BH1750, ESP8266WiFi, ESP8266Ping, ESP8266WebServer, ESP8266HTTPUpdateServer, ESP8266mDNS, IRremoteESP8266, ESPEasy_ESP8266Ping, ESP32_ping, HeatpumpIR
lib_deps                  = https://github.com/TD-er/ESPEasySerial.git
board_build.f_flash       = 80000000L
board_build.flash_mode    = dout
board_upload.maximum_size = 1900544
board_build.partitions    = esp32_partition_app1810k_spiffs316k.csv
build_unflags             = -Wall
build_flags               = ${mqtt_flags.build_flags} 
                            -D BUILD_GIT='"${sysenv.TRAVIS_TAG}"' 
                            -DCONFIG_FREERTOS_ASSERT_DISABLE
                            -DCONFIG_LWIP_ESP_GRATUITOUS_ARP
                            -DCONFIG_LWIP_GARP_TMR_INTERVAL=30



[esp32_board]
;halfile = generic.h
;halfile = ebox.h
;halfile = eboxtube.h
;halfile = ecopower.h
;halfile = heltec.h
;halfile = heltecv2.h
;halfile = ttgov1.h
;halfile = ttgov2.h
;halfile = ttgov21old.h
;halfile = ttgov21new.h
;halfile = ttgofox.h
;halfile = ttgobeam.h
halfile = ttgobeam10.h
;halfile = fipy.h
;halfile = lopy.h
;halfile = lopy4.h
;halfile = lolin32litelora.h
;halfile = lolin32lora.h
;halfile = lolin32lite.h
;halfile = wemos32oled.h
;halfile = wemos32matrix.h
;halfile = octopus32.h
;halfile = tinypico.h
;halfile = tinypicomatrix.h


[lmic_lora]
lib_deps_lmic_lora        = MCCI LoRaWAN LMIC library@>=3.0.99
lmicconfigfile            = src/LoRa/lmic_config.h
build_flags               = -DUSES_C019





; Custom: 4096k version --------------------------
[env:custom_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}   -DPLUGIN_BUILD_CUSTOM
board                     = esp32dev
extra_scripts             = pre:pre_custom_esp32.py


[env:test_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}  -DPLUGIN_SET_TEST_ESP32
board                     = esp32dev


[env:test_ESP32-wrover-kit_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}  -DPLUGIN_SET_TEST_ESP32
board                     = esp-wrover-kit
upload_protocol           = ftdi
debug_tool                = ftdi
debug_extra_cmds          = break Misc.ino:3011




[env:test_ESP32-TTGO-t-beam_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}
                            -include "src/src/hal/ttgobeam.h"
                            ${lmic_lora.build_flags}
                            -DPLUGIN_SET_TEST_ESP32
board                     = ttgo-t-beam
lib_deps                  = ${esp32_common.lib_deps}
                            ${lmic_lora.lib_deps_lmic_lora}
upload_protocol           = ${espota.upload_protocol}
upload_port               = ${espota.upload_port}
; each flag in a new line
upload_flags              = ${espota.upload_flags_esp32}